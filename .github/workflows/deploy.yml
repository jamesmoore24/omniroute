name: Deploy to EC2

on:
  push:
    branches: ["main"]

env:
  EC2_PATH: "/var/www/omniroute" # Replace with your app's path on EC2
  EC2_HOST: "3.84.34.77"
  EC2_USER: "ec2-user"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Next.js
        run: npm run build

      - name: List files
        run: ls -la

      - name: Compress build folder (optional step)
        run: tar -czf build.tar.gz .next node_modules package.json package-lock.json next.config.js postcss.config.js tailwind.config.js tsconfig.json

      - name: Copy files to EC2 via rsync
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: build.tar.gz
          remote_path: ${{ env.EC2_PATH }}
          remote_host: ${{ env.EC2_HOST }}
          remote_user: ${{ env.EC2_USER }}
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: SSH into EC2 and unpack + restart server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd $EC2_PATH
            echo $EC2_PATH

            # Unpack the tar
            tar -xzf build.tar.gz
            rm build.tar.gz

            # Rebuild PM2 process or start it if not running
            pm2 stop omniroute || true
            pm2 start npm --name omniroute -- run start
            pm2 save
